<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--引入配置属性文件 -->
    <context:property-placeholder location="classpath:dbConfig.properties" />

    <!--扫描文件，自动注入dao,entity,service为bean -->
    <!--<context:component-scan base-package="cn.guotl.*.mapper,cn.guotl.*.service.impl" />-->
    <context:component-scan base-package="cn.guotl" use-default-filters="false">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--&lt;!&ndash; c3p0数据源配置 &ndash;&gt;-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >-->
        <!--<property name="driverClass" value="${jdbc.driver}" />-->
        <!--<property name="jdbcUrl" value="${jdbc.url}" />-->
        <!--<property name="user" value="${jdbc.username}" />-->
        <!--<property name="password" value="${jdbc.password}" />-->

        <!--&lt;!&ndash; 请求超时时间 &ndash;&gt;-->
        <!--<property name="checkoutTimeout" value="30000" />-->
        <!--&lt;!&ndash; 每60秒检查所有连接池中的空闲连接。默认值: 0，不检查 &ndash;&gt;-->
        <!--<property name="idleConnectionTestPeriod" value="30" />-->
        <!--&lt;!&ndash; 连接数据库连接池最大空闲时间 &ndash;&gt;-->
        <!--<property name="maxIdleTime" value="30" />-->
        <!--&lt;!&ndash; 连接池初始化连接数 &ndash;&gt;-->
        <!--<property name="initialPoolSize" value="5" />-->
        <!--<property name="minPoolSize" value="5" />-->
        <!--<property name="maxPoolSize" value="20" />-->
        <!--&lt;!&ndash;当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 &ndash;&gt;-->
        <!--<property name="acquireIncrement" value="5" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 自动扫描mapper.xml文件 &ndash;&gt;-->
    <!--&lt;!&ndash; spring和MyBatis完美整合，不需要mybatis的配置映射文件&ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="mapperLocations" value="classpath:cn/guotl/*/sql/*.xml"></property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; DAO接口所在包名，Spring会自动查找其下的类&ndash;&gt;-->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
        <!--<property name="basePackage" value="cn.guotl.*.mapper" />-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 配置事务管理, use JtaTransactionManager for global tx &ndash;&gt;-->
    <!--<bean id="transactionManager"-->
          <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 声明式事务，事务拦截器 &ndash;&gt;-->
    <!--<bean id="transactionInterceptor"-->
          <!--class="org.springframework.transaction.interceptor.TransactionInterceptor">-->
        <!--<property name="transactionManager" ref="transactionManager" />-->
        <!--&lt;!&ndash; 配置事务属性 &ndash;&gt;-->
        <!--<property name="transactionAttributes">-->
            <!--&lt;!&ndash;下面定义事务传播属性 &ndash;&gt;-->
            <!--<props>-->
                <!--<prop key="save*">PROPAGATION_REQUIRED</prop>-->
                <!--<prop key="insert*">PROPAGATION_REQUIRED</prop>-->
                <!--<prop key="del*">PROPAGATION_REQUIRED</prop>-->
                <!--<prop key="update">PROPAGATION_REQUIRED</prop>-->

                <!--<prop key="select*">PROPAGATION_SUPPORTS,readOnly</prop>-->
                <!--<prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop>-->
                <!--<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>-->
                <!--<prop key="query*">PROPAGATION_SUPPORTS,readOnly</prop>-->
                <!--<prop key="*">PROPAGATION_REQUIRED</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; Bean后处理器BeanNameAutoProxyCreator，根据List配置创建事务代理 &ndash;&gt;-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">-->
        <!--&lt;!&ndash; 下面是所有需要自动创建事务代理的bean &ndash;&gt;-->
        <!--<property name="beanNames">-->
            <!--<list>-->
                <!--<value>*Service</value>-->
                <!--&lt;!&ndash;<value>*ServiceImpl</value>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash; 下面定义BeanNameAutoProxyCreator所需的事务拦截器 &ndash;&gt;-->
        <!--<property name="interceptorNames">-->
            <!--<list>-->
                <!--<value>transactionInterceptor</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

</beans>